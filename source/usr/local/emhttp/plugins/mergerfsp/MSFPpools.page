Menu="MSFPsettings:2"
Title="mergerFS Diagnostics"
Tag="magic"
Markdown="false"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright Dan Landon (parts of code from Web GUI)
 * Copyright Bergware International (parts of code from Web GUI)
 * Copyright Lime Technology (any and all other parts of Unraid)
 *
 * Copyright desertwitch (as author and maintainer of this file)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
require_once '/usr/local/emhttp/plugins/mergerfsp/include/mergerfsp_helpers.php';
?>

<?
$msfp_pools_mtab = file_get_contents("/etc/mtab") ?? "";
$msfp_pools_mounts = [];
$msfp_pools_mount_re = '/ (.*?) fuse.mergerfs/m';
preg_match_all($msfp_pools_mount_re, $msfp_pools_mtab, $msfp_pools_mounts, PREG_SET_ORDER);

if(!empty($msfp_pools_mounts)) {
    for ($x=0; $x<count($msfp_pools_mounts); $x++) {
        try {
            $msfp_pools_return = [];
            $msfp_pools_mount_point = trim($msfp_pools_mounts[$x][1]);
            $msfp_pools_mount_point_html = htmlspecialchars(strtoupper(trim(basename($msfp_pools_mount_point))));
            $msfp_pools_attr_rows = [];
            $msfp_pools_attr_retval = -1;
            
            $msfp_pools_disk_util = htmlspecialchars(trim(shell_exec("df -B1 " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | grep " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | awk '{print $5}' 2>/dev/null") ?? "-"));
            $msfp_pools_disk_free = htmlspecialchars(msfp_humanFileSize(trim(shell_exec("df -B1 " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | grep " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | awk '{print $4}' 2>/dev/null") ?? "-")));
            $msfp_pools_disk_used = htmlspecialchars(msfp_humanFileSize(trim(shell_exec("df -B1 " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | grep " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | awk '{print $3}' 2>/dev/null") ?? "-")));
            $msfp_pools_disk_total = htmlspecialchars(msfp_humanFileSize(trim(shell_exec("df -B1 " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | grep " . escapeshellarg($msfp_pools_mount_point) . " 2>/dev/null | awk '{print $2}' 2>/dev/null") ?? "-")));
            exec("getfattr -d -m '' -- ".escapeshellarg($msfp_pools_mount_point)."/.mergerfs 2>/dev/null | grep user.mergerfs 2>/dev/null", $msfp_pools_attr_rows, $msfp_pools_attr_retval);
            
            if($msfp_pools_attr_retval === 0 && !empty($msfp_pools_attr_rows)) {
                $msfp_pools_return[] = "<table class='tablesorter mergertable" . ($x === 0 ? " shift" : "") . "'>";
                $msfp_pools_return[] = "<thead><tr><th colspan='4' style='text-transform:none;'><strong>$msfp_pools_mount_point_html</strong><span style='float:right;'><strong>Free: $msfp_pools_disk_free / $msfp_pools_disk_used used of $msfp_pools_disk_total ($msfp_pools_disk_util)</strong></span></th></tr><tr><th style='width:15%'>Attribute</th><th style='width:35%'>Value</th><th style='width:15%'>Attribute</th><th style='width:35%'>Value</th></tr></thead>";
                $msfp_pools_return[] = "<tbody>";
                
                for ($i=0; $i<count($msfp_pools_attr_rows); $i++) {
                    $row = array_map('htmlspecialchars', explode('=', $msfp_pools_attr_rows[$i], 2));
                    $key = str_replace("user.mergerfs.", "", trim($row[0]));
                    
                    $val = str_replace("&quot;", "", trim($row[1]));
                    $val = str_replace('"', '', $val);
                    if(strlen($val) > 40) {
                      $val = "<details><summary>...</summary><span>$val</span></details>";  
                    }

                    if ($i%2==0) { $msfp_pools_return[] = "<tr>"; }
                    $msfp_pools_return[] = "<td><strong>$key</strong></td><td>$val</td>";
                    if ($i%2==1) { $msfp_pools_return[] = "</tr>"; }
                }
                if (count($msfp_pools_attr_rows)%2==1) { $msfp_pools_return[] = "<td></td><td></td></tr>"; }

                $msfp_pools_return[] = "</tbody></table>";
            }
        } catch (Throwable $e) { // For PHP 7
            continue;
        } catch (Exception $e) { // For PHP 5
            continue;
        }
        echo(implode('', $msfp_pools_return));
    }
} else {
    echo("<div><strong><em>There is no extended pool information available for display at the moment (perhaps none are yet mounted).</em></strong></div><br>");
}
?>
